openapi: 3.0.1
info:
  title: Voucher Partner API
  version: 1.0.1
servers:
  - url: 'http://localhost:8087/api'
    description: Development server
  - url: 'https://localhost:8087/api'
    description: Development server with TLS Profile
paths:
  /voucher/allocation:
    post:
      tags:
        - voucher
      summary: Customer voucher allocation
      operationId: issueVoucher
      description: Reserve a voucher for a customer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoucherAllocationRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherAllocationResponse'
        '204':
          description: No content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error
  /voucher/return/{voucherId}:
    put:
      tags:
        - voucher
      summary: Return a voucher which was issued
      operationId: returnVoucher
      description: Return a voucher which was issued
      parameters:
        - name: voucherId
          in: path
          required: true
          description: The original wigroup voucher id or VP_VOUCHER.ID used to issued the voucher
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoucherReturnRequest'
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherReturnResponse'
        '204':
          description: No content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error
  /product/validation/{productId}:
    get:
      tags:
        - product
      summary: Check whether the given voucher based product has stock.
      operationId: validateVoucher
      description: Check whether the given voucher based product has stock
      parameters:
        - name: productId
          in: path
          required: true
          description: The original wigroup voucher id or VP_VOUCHER.ID used to issued the voucher
          schema:
            type: string
        - name: origin
          in: query
          required: true
          description: origin identifier
          schema:
            type: string
        - name: campaign
          in: query
          required: true
          description: campaign identifier
          schema:
            type: string
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductValidationResponse'
        '204':
          description: No content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error
  /product/list:
    get:
      tags:
        - product
      summary: Retrieves a list of all the voucher based products
      operationId: getProductList
      description: Retrieves a list of all the voucher based products
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListResponse'
        '204':
          description: No content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error
  /voucher/redemption/{voucherId}:
    post:
      tags:
        - voucher
      summary: Return a voucher which was issued
      operationId: redeemVoucher
      description: Redeem a voucher which was issued
      parameters:
        - name: voucherId
          in: path
          required: true
          description: Issues a new voucher code against a gift card which has had a partial redemption
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoucherRedemptionRequest'
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherRedemptionResponse'
        '204':
          description: No content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error
  /voucher/balance/{voucherid}:
    get:
      tags:
        - voucher
      summary: Retrieves the current balance for a Wigroup giftcard.
      operationId: voucherbalance
      description: Check the current balance for given voucher based on the voucherid
      parameters:
        - name: voucherid
          in: path
          required: true
          description: the id of the issued gift card
          schema:
            type: integer
        - name: origin
          in: query
          required: true
          description: origin identifier
          schema:
            type: string
        - name: campaign
          in: query
          required: true
          description: campaign identifier
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherBalanceResponse'
        '204':
          description: No content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error
  /voucher/validation/{couponId}/{productId}:
    get:
      tags:
        - voucher
      summary: Checks validity of WiGroup vouchers being requested for refund
      operationId: voucherValidation
      description: Checks validity of WiGroup vouchers being requested for refund
      parameters:
        - name: couponId
          in: path
          required: true
          description: WiGroup Coupon Id
          schema:
            type: integer
        - name: productId
          in: path
          required: true
          description: Product Identifier
          schema:
            type: string

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherValidationResponse'
        '204':
          description: No content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error

  /batch/list/{period}:
    get:
      tags:
        - batch
      summary: Retrieves list of batches
      operationId: batchList
      description: Returns a list of batches
      parameters:
        - name: period
          in: path
          required: true
          description: The period in number of days in the past to which the query should be limited
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchListResponse'
        '204':
          description: No content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error
  /batch/status/{batchId}:
    put:
      tags:
        - batch
      summary: Close a batch or mark it as deleted.
      operationId: batchStatus
      description: Close a batch or mark it as deleted.
      parameters:
        - name: batchId
          in: path
          required: true
          description: batch Identifier
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchStatusRequest'
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
        '204':
          description: No content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error
  /batch/details/{batchId}:
    get:
      tags:
        - batch
      summary: Returns the details of a specific batch
      operationId: batchDetails
      description: Returns the details of a specific batch
      parameters:
        - name: batchId
          in: path
          required: true
          description: Batch identifier
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDetailsResponse'
        '204':
          description: No content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error
  /batch/upload/{batchId}:
    put:
      tags:
        - batch
      summary: Uploads a file containing voucher codes and links these to a batch
      operationId: batchUpload
      description: Uploads a file containing voucher codes and links these to a batch
      parameters:
        - name: batchId
          in: path
          required: true
          description: Batch identifier
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful operation
        '204':
          description: No content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error
  /batch:
    post:
      tags:
        - batch
      summary: Creates a batch for the uploading of files
      operationId: batch
      description: Creates a batch for the uploading of files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponse'
        '204':
          description: No content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error
  /campaign/list:
    get:
      tags:
        - campaign
      summary: Retrieves a list of all the campaigns
      operationId: getCampaignList
      description: Retrieves a list of all the campaigns
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignListResponse'
        '204':
          description: No content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error
  /campaign/products/{campaignId}:
    get:
      tags:
        - campaign
      summary: Retrieve the voucher products linked to a campaign.
      operationId: getCampaignProducts
      description: Retrieve the voucher products linked to a campaign.
      parameters:
        - name: campaignId
          in: path
          required: true
          description: Campaign Identifier
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherProductsResponse'
        '204':
          description: No content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error
  /campaign/products/{campaignid}:
    put:
      tags:
        - campaign
      summary: Link / Delink voucher products from a campaign.
      operationId: linkDelinkProduct
      description: Link / Delink voucher products from a campaign.
      parameters:
        - name: campaignid
          in: path
          required: true
          description: Campaign Identifier
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkDelinkRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkDelinkResponse'
        '204':
          description: No content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error
  /campaign/vouchers/quantities/{campaignId}:
    get:
      tags:
        - campaign
      summary: Retrieve the list of voucher quantities available.
      operationId: getQuantities
      description: Retrieve the list of voucher quantities available.
      parameters:
        - name: campaignId
          in: path
          required: true
          description: Campaign Identifier
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuantitesResponse'
        '204':
          description: No content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error


components:
  schemas:
    VoucherAllocationRequest:
      type: object
      properties:
        origin:
          description: Origin Identifier
          type: string
        productId:
          description: Product identifier
          type: string
        subIdType:
          description: Subscriber type, either VS, OM or Vodapay
          type: string
          enum: [VP, OM, VS, VK]
        subId:
          description: Subcriber Id Type
          type: string
        msisdn:
          description: Subcriber Id Type
          type: string
        campaign:
          description: campaign identifier
          type: string
        trxId:
          description: Subcriber Id Type
          type: string
        cost:
          description: Subcriber Id Type
          type: number
        value:
          description: Subcriber Id Type
          type: number
      required:
        - origin
        - productId
        - subIdType
        - subId
        - msisdn
        - campaign
        - trxId
        - cost
        - value
    VoucherAllocationResponse:
      type: object
      properties:
        voucherId:
          description: The unique id which shall be logged by CP-VOUCHERS for tracing
          type: integer
          format: int64
        voucherCode:
          description: >-
            The voucher
          type: string
        voucherDescription:
          description: >-
            The description of the voucher which was reserved, eg 'R50 Nando's
            voucher'
          type: string
        voucherType:
          description: The Type, eg GiftCard, OnlineVoucher
          type: string
        voucherCategory:
          description: 'The categor, eg food'
          type: string
        voucherVendor:
          description: "The vendor, eg Nando's"
          type: string
        collectPoint:
          description: An optional field that indicates where the voucher can be redeemed
          type: string
        expiryDate:
          description: The date by which the voucher has to be redeemed
          type: string
          format: date-time
        trxId:
          description: The incoming trxId
          type: string
        encryptedYN:
          description: 'Indicates Whether the returned voucher code is encrypted'
          type: string
    VoucherReturnRequest:
      type: object
      properties:
        productId:
          description: The product being returned
          type: string
        reason:
          description: The reason for the cancellation/return
          type: string
        msisdn:
          description: The 11 digit msisdn of the original transaction
          type: string
        trxId:
          description: Transaction Id Type
          type: string
      required:
        - productId
        - reason
        - msisdn
        - trxId
    VoucherReturnResponse:
      type: object
      properties:
        voucherId:
          description: The unique voucher id/seq
          type: integer
          format: int64
        voucherDescription:
          description: >-
            The description of the voucher which was reserved, eg 'R50 Nando's
            voucher'
          type: string
        trxId:
          description: The incoming trx id
          type: string
    ProductValidationResponse:
      type: object
      properties:
        voucherType:
          description: The Type, eg GiftCard, OnlineVoucher
          type: string
        voucherCategory:
          description: 'The categor, eg food'
          type: string
        voucherDescription:
          description: >-
            The description of the voucher which was reserved, eg 'R50 Nando's
            voucher'
          type: string
        voucherQuantity:
          description: 'The available vouchers'
          type: number
        voucherVendor:
          description: 'The vendor, eg Nandos'
          type: string
        minExpiry:
          description: 'The minimum expiry date'
          type: string
          format: date-time
    VoucherRedemptionRequest:
      type: object
      properties:
        origin:
          description: Origin Identifier
          type: string
        campaign:
          description: campaign identifier
          type: string
      required:
        - origin
        - campaign
    VoucherRedemptionResponse:
      type: object
      properties:
        voucherCode:
          description: >-
            The voucher
          type: string
        expiryDate:
          description: The date by which the voucher has to be redeemed
          type: string
    VoucherBalanceResponse:
      type: object
      properties:
        balance:
          type: number
          description: remaining balance on the gift card
        issuedAmount:
          type: number
          description: The amount issued for the gift card
        redeemedAmount:
          type: number
          description: The amount redeemed from the gift card
        expiredAmount:
          type: number
          description: The amount expired from the gift card
        expiryDate:
          type: string
          description: the date the giftcard expires "2015-05-25T23:59:59+0200"
    ProductListResponse:
      type: array
      items:
        $ref: '#/components/schemas/ProductListResponseObject'

    ProductListResponseObject:
      type: object
      properties:
        productId:
          type: string
          description: Product Identifier
        description:
          type: string
          description: Description
        type:
          type: string
          description: Type
          #enum: [Voucher,GenericVoucher,OnlineVoucher,OnlineGiftcard]
        category:
          type: string
          description: Category
        vendor:
          type: string
          description: Vendor
        extId:
          type: string
          description: The id/SKU of this product on the external system. Eg the campaign Id on Wigroup
        extSystem:
          type: string
          description: The external system being used for the issuing of real time vouchers
        validityPeriod:
          type: string
          description: The default validity period in days, relative to the date of issue
        cacheQuantity:
          type: string
          description: The number of vouchers to load into cache when the cache is depleted.
        encryptedYN:
          type: string
          description: Whether the voucher code should be encrypted in the database. Should always be Y
    VoucherValidationResponse:
      type: object
      properties:
        couponId:
          type: number
          description: The unique coupon id/seq
        description:
          type: string
          description: Description
        voucherAmount:
          type: number
          description: Voucher Amount
        status:
          type: string
          description: Status
        createDate:
          type: string
        msisdn:
          type: string
    BatchListResponse:
      type: array
      items:
        $ref: '#/components/schemas/BatchListResponseObject'
    BatchListResponseObject:
      type: object
      properties:
        ID:
          type: integer
          description: Batch Identifier
        batchName:
          type: string
          description: The unique name of the batch
        batchComment:
          type: string
          description: A descriptive comment for the batch
        createDate:
          description: Batch creation date
          type: string
          format: date-time
        loadDate:
          description: The date when the loading was completed
          type: string
          format: date-time
        status:
          type: string
          description: The status of the batch. Can be one of:(O)pen, (A)ctivated, (D)eleted
        createUser:
          type: string
          description: The user who initially created the batch
        activateUser:
          type: string
          description: The user who activated the batch

    BatchDetailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/BatchDetailsResponseObject'
    BatchDetailsResponseObject:
      type: object
      properties:
        productId:
          type: string
          description: product id
        productType:
          type: string
          description: quantities of vouchers linked to batch
        productDescription:
          type: string
          description: description for a specific prduct
        voucherDescription:
          type: string
          description: description for a voucher
        fileName:
          type: string
          description: name of the given file
        numVouchers:
          type: integer
          description: quantities of vouchers linked to batch
        startDate:
          type: string
          format: date
          description: start date
        endDate:
          type: string
          format: date
          description: end date
        voucherExpiryDate:
          type: string
          format: date
          description: voucher expiry date
    BatchRequest:
      type: object
      properties:
        userName:
          type: string
          description: User name of the person creating the batch
        batchName:
          type: string
          description: Batch name
        batchComment:
          type: string
          description: Batch description
    BatchResponse:
      type: object
      properties:
        batchId:
          type: number
          description: The unique coupon id/seq

    CampaignListResponse:
      type: array
      items:
        $ref: '#/components/schemas/CampaignListResponseObject'
    CampaignListResponseObject:
      type: object
      properties:
        campaignId:
          type: string
          description: Campaign Identifier
        campaignName:
          type: string
          description: The unique name of the campaign
        startDate:
          type: string
          example: '2021-03-03 16:40:35.796'
          description: The start date/time of the campaign
        endDate:
          type: string
          example: '2021-03-03 16:40:35.796'
          description: The end date/time of the campaign
    VoucherProductsResponse:
      type: array
      items:
        $ref: '#/components/schemas/VoucherProductResponseObject'
    VoucherProductResponseObject:
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier for the row
        productId:
          type: string
          description: The ID of the product linked to this campaign
        productName:
          type: string
          description: The name of the product linked to this campaign
        activeYN:
          type: string
          description: Whether the product is enabled for this campaign
    LinkDelinkRequest:
      type: object
      properties:
        addProducts:
          description: A comma separated list of voucher products to add to this campaign
          type: string
        removeProducts:
          description: A comma separated list of voucher products to remove from this campaign
          type: string
      required:
        - productId
    LinkDelinkResponse:
      type: object
      properties:
        campaignId:
          type: string
          description: The unique campaign id
        numAdded:
          type: integer
          format: int32
          description: The number if products linked
        numDeleted:
          type: integer
          format: int32
          description: The number if products delinked
    QuantitesResponse:
      type: array
      items:
        $ref: '#/components/schemas/QuantitiesResponseObject'
    QuantitiesResponseObject:
      type: object
      properties:
        productId:
          type: string
          description: Product Identifier
        productType:
          type: string
          description: Type
        productDescription:
          type: string
          description: Description
        voucherDescription:
          type: string
          description: Category
        quantity:
          type: integer
          description: The number of vouchers.
        endDate:
          type: string
          format: date
          description: The external system being used for the issuing of real time vouchers
        voucherExpiryDate:
          type: string
          format: date
          description: The default validity period in days, relative to the date of issue
    BatchStatusRequest:
      type: object
      properties:
        status:
          type: string
          description: Incoming status of a batch
        userName:
          type: string
          description: Vodacom username
    BatchStatusResponse:
      type: object
      properties:
        status:
          type: string
          description: New updated response


    Problem:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: >
            An absolute URI that identifies the problem type.  When
            dereferenced,

            it SHOULD provide human-readable documentation for the problem type

            (e.g., using HTML).
          default: 'about:blank'
          example: 'https://zalando.github.io/problem/constraint-violation'
        title:
          type: string
          description: >
            A short, summary of the problem type. Written in english and
            readable

            for engineers (usually not suited for non technical stakeholders and

            not localized);
          example: Service Unavailable
        status:
          type: integer
          format: int32
          description: >
            The HTTP status code generated by the origin server for this
            occurrence

            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
          example: Connection to database timed out
        instance:
          type: string
          format: uri
          description: >
            An absolute URI that identifies the specific occurrence of the
            problem.

            It may or may not yield further information if dereferenced.
  responses:
    Problem:
      description: >-
        error occurred - see status code and problem object for more
        information.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
  securitySchemes:
    jwt:
      type: http
      description: JWT Authentication
      scheme: bearer
      bearerFormat: JWT
security:
  - jwt: []
